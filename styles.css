body {
    margin: 0;
    padding: 0;
    background-color: black;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
}

.container {
    text-align: center;
}

h1 {
    color: white;
    font-family: Arial, sans-serif;
    font-size: 3rem;
}

.hidden-button {
    position: fixed;
    top: 10px;
    left: 10px;
    background: transparent;
    border: none;
    color: #333;
    cursor: pointer;
    opacity: 0.1;
}

.hidden-button:hover {
    opacity: 0.5;
}

.text-box-container {
    margin-top: 20px;
}

.text-box-container input {
    padding: 10px;
    font-size: 1rem;
    border-radius: 5px;
    border: none;
    width: 300px;
}

.hidden {
    display: none;
}

.universe-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: black;
    display: none;
    overflow: hidden;
    opacity: 0;
    transition: opacity 5s ease-in;
    perspective: 1000px;
    transform-style: preserve-3d; /* Add this to enable 3D transformations */
}

.universe-container.visible {
    opacity: 1;
}

.star-field {
    position: absolute;
    width: 200vw;
    height: 200vh;
    transform-style: preserve-3d;
    transition: transform 0.1s ease-out;
    transform-origin: center center;
}

.star {
    position: absolute;
    background: white;
    border-radius: 50%;
    animation: twinkle 1s infinite alternate;
    transform: translateZ(0); /* Stars will be given random Z positions in JS */
}

.portal-effect {
    position: fixed;
    top: 50%;
    left: 50%;
    width: 10px;
    height: 10px;
    background: white;
    border-radius: 50%;
    animation: portalSpin 3s forwards;
    display: none;
    z-index: 1000;
}

@keyframes portalSpin {
    0% {
        transform: translate(-50%, -50%) rotate(0deg) scale(1);
        box-shadow: 0 0 50px white;
    }
    50% {
        transform: translate(-50%, -50%) rotate(360deg) scale(50);
        box-shadow: 0 0 100px white, 0 0 200px blue, 0 0 300px purple;
    }
    100% {
        transform: translate(-50%, -50%) rotate(720deg) scale(100);
        box-shadow: 0 0 150px white, 0 0 300px blue, 0 0 450px purple;
    }
}

@keyframes twinkle {
    0% { opacity: 0.2; }
    100% { opacity: 1; }
}

.fade-out {
    animation: textGlitch 1s forwards;
}

@keyframes textGlitch {
    0% {
        transform: translate(0);
        text-shadow: 0 0 0 #ff0000;
    }
    20% {
        transform: translate(-5px, 5px);
        text-shadow: 3px -3px 0 #00ff00, -3px 3px 0 #0000ff;
    }
    40% {
        transform: translate(5px, -5px);
        text-shadow: -3px 3px 0 #00ff00, 3px -3px 0 #0000ff;
    }
    60% {
        transform: translate(-5px, -5px);
        text-shadow: 3px 3px 0 #00ff00, -3px -3px 0 #0000ff;
    }
    80% {
        transform: translate(5px, 5px);
        text-shadow: -3px -3px 0 #00ff00, 3px 3px 0 #0000ff;
    }
    100% {
        transform: translate(0);
        text-shadow: 0 0 0 #ff0000;
    }
}

/* Add these new styles */
.special-star {
    position: absolute;
    background: red;
    border-radius: 50%;
    cursor: pointer;
    animation: pulse 2s infinite;
    z-index: 1000;
}

@keyframes pulse {
    0% { transform: scale(1); box-shadow: 0 0 10px red; }
    50% { transform: scale(1.5); box-shadow: 0 0 20px red, 0 0 40px red; }
    100% { transform: scale(1); box-shadow: 0 0 10px red; }
}

@keyframes shake {
    0%, 100% { transform: translate(0, 0); }
    10%, 30%, 50%, 70%, 90% { transform: translate(-5px, -5px); }
    20%, 40%, 60%, 80% { transform: translate(5px, 5px); }
}

@keyframes explode {
    0% { transform: scale(1); opacity: 1; }
    50% { transform: scale(50); opacity: 0.8; box-shadow: 0 0 100px red, 0 0 200px white; }
    100% { transform: scale(100); opacity: 0; }
}

.shaking {
    animation: shake 0.5s ease-in-out;
}

.white-screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: white;
    z-index: 2000;
    display: none;
    opacity: 0;
    transition: opacity 2s ease-in;
}

.white-screen.visible {
    opacity: 1;
}

/* Replace the star styles with card styles */
.card {
    position: absolute;
    width: 80px;
    height: 112px;
    border-radius: 5px;
    box-shadow: 0 0 5px rgba(255,255,255,0.5);
    transform-style: preserve-3d;
    padding: 10px;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    font-family: Arial, sans-serif;
    font-size: 8px;
    color: white;
    text-shadow: 1px 1px 1px rgba(0,0,0,0.5);
}

/* Different hover animations */
@keyframes elementalHover {
    0% { transform: translateY(-5px) rotate(0deg); }
    100% { transform: translateY(5px) rotate(3deg); }
}

@keyframes mysticFloat {
    0% { transform: translateY(-8px) scale(1.02); }
    50% { transform: translateY(0px) scale(0.98); }
    100% { transform: translateY(-8px) scale(1.02); }
}

@keyframes chaosShift {
    0% { transform: translate(-5px, -5px) rotate(-2deg); }
    33% { transform: translate(5px, 2px) rotate(2deg); }
    66% { transform: translate(-2px, 5px) rotate(-1deg); }
    100% { transform: translate(-5px, -5px) rotate(-2deg); }
}

@keyframes pulseGlow {
    0% { box-shadow: 0 0 5px currentColor; }
    50% { box-shadow: 0 0 20px currentColor; }
    100% { box-shadow: 0 0 5px currentColor; }
}

@keyframes sparkle {
    0%, 100% { background-position: 0% 0%; }
    50% { background-position: 100% 100%; }
}

/* Card type specific effects */
.card[data-type="elemental"] {
    animation: elementalHover 3s infinite alternate ease-in-out;
}
.card[data-type="elemental"]::before {
    content: '';
    position: absolute;
    inset: -5px;
    background: linear-gradient(45deg, transparent 40%, rgba(255,255,255,0.3) 45%, transparent 50%);
    animation: sparkle 3s infinite linear;
    z-index: -1;
    border-radius: inherit;
}

.card[data-type="mystic"] {
    animation: mysticFloat 4s infinite ease-in-out;
}
.card[data-type="mystic"]::after {
    content: '';
    position: absolute;
    inset: -2px;
    background: radial-gradient(circle at 50% 50%, transparent 80%, rgba(255,255,255,0.2));
    animation: pulseGlow 2s infinite;
    border-radius: inherit;
}

.card[data-type="chaos"] {
    animation: chaosShift 5s infinite linear;
}
.card[data-type="chaos"]::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(transparent, rgba(255,255,255,0.1));
    animation: sparkle 2s infinite linear;
    border-radius: inherit;
}

/* Particle effects */
.particle {
    position: absolute;
    pointer-events: none;
    background: currentColor;
    border-radius: 50%;
    width: 2px;
    height: 2px;
    animation: float-up 2s infinite linear;
}

@keyframes float-up {
    0% { transform: translateY(0) rotate(0deg); opacity: 1; }
    100% { transform: translateY(-20px) rotate(360deg); opacity: 0; }
}

.special-card {
    position: absolute;
    width: 80px;
    height: 112px;
    background: red;
    border-radius: 5px;
    cursor: pointer;
    animation: specialHover 2s infinite alternate ease-in-out;
    z-index: 1000;
    box-shadow: 0 0 20px red;
    padding: 10px;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    color: white;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.7);
}

.special-card .card-title {
    font-size: 12px;
    font-weight: bold;
    margin: 5px 0;
}

.special-card .card-description {
    font-size: 10px;
}

.card-icon {
    font-size: 32px; /* Increased from 24px */
    margin-bottom: 8px; /* Increased margin to balance the larger icon */
}

.special-card .card-icon {
    font-size: 32px; /* Match the regular card icon size */
    margin-bottom: 8px;
}

/* Add new unique card animations */
@keyframes fireFloat {
    0% { transform: translateY(-5px) rotate(2deg); filter: brightness(1); }
    50% { transform: translateY(5px) rotate(-2deg); filter: brightness(1.2); }
    100% { transform: translateY(-5px) rotate(2deg); filter: brightness(1); }
}

@keyframes iceFloat {
    0% { transform: translateY(-3px) scale(1); filter: blur(0px); }
    50% { transform: translateY(3px) scale(0.98); filter: blur(0.5px); }
    100% { transform: translateY(-3px) scale(1); filter: blur(0px); }
}

@keyframes lightningFloat {
    0% { transform: translateY(-4px) rotate(-1deg); filter: brightness(1); }
    25% { transform: translateY(0px) rotate(1deg); filter: brightness(1.4); }
    50% { transform: translateY(4px) rotate(-1deg); filter: brightness(1); }
    75% { transform: translateY(0px) rotate(1deg); filter: brightness(1.4); }
    100% { transform: translateY(-4px) rotate(-1deg); filter: brightness(1); }
}

@keyframes natureFloat {
    0% { transform: translateY(-6px) rotate(1deg) scale(1); }
    50% { transform: translateY(0px) rotate(-1deg) scale(1.02); }
    100% { transform: translateY(-6px) rotate(1deg) scale(1); }
}

@keyframes spiritFloat {
    0% { transform: translateY(-5px); filter: opacity(0.8); }
    50% { transform: translateY(5px); filter: opacity(1); }
    100% { transform: translateY(-5px); filter: opacity(0.8); }
}

@keyframes chaosFloat {
    0% { transform: translate(-5px, -5px) rotate(-3deg) scale(1.02); }
    25% { transform: translate(5px, -2px) rotate(3deg) scale(0.98); }
    50% { transform: translate(-2px, 5px) rotate(-2deg) scale(1); }
    75% { transform: translate(3px, -3px) rotate(2deg) scale(1.01); }
    100% { transform: translate(-5px, -5px) rotate(-3deg) scale(1.02); }
}

@keyframes timeFloat {
    0% { transform: translateY(-4px) scale(1.01); filter: hue-rotate(0deg); }
    50% { transform: translateY(4px) scale(0.99); filter: hue-rotate(15deg); }
    100% { transform: translateY(-4px) scale(1.01); filter: hue-rotate(0deg); }
}

@keyframes voidFloat {
    0% { transform: scale(1) rotate(0deg); filter: brightness(1); }
    50% { transform: scale(1.05) rotate(180deg); filter: brightness(1.2); }
    100% { transform: scale(1) rotate(360deg); filter: brightness(1); }
}

/* Apply animations to specific cards */
.card[data-title="Flame Burst"],
.card[data-title="Volcanic Might"] {
    animation: fireFloat 3s infinite ease-in-out;
}

.card[data-title="Frost Nova"] {
    animation: iceFloat 4s infinite ease-in-out;
}

.card[data-title="Lightning Strike"] {
    animation: lightningFloat 3s infinite ease-in-out;
}

.card[data-title="Nature's Shield"],
.card[data-title="Tidal Wave"] {
    animation: natureFloat 4s infinite ease-in-out;
}

.card[data-title="Spirit Form"],
.card[data-title="Mirror Image"] {
    animation: spiritFloat 5s infinite ease-in-out;
}

.card[data-title="Chaos Theory"],
.card[data-title="Reality Paint"],
.card[data-title="Spell Thief"] {
    animation: chaosFloat 6s infinite linear;
}

.card[data-title="Time Warp"],
.card[data-title="Future Sight"] {
    animation: timeFloat 5s infinite ease-in-out;
}

.card[data-title="Dark Matter"] {
    animation: voidFloat 8s infinite linear;
}

/* Add unique hover effects */
.card:hover {
    transform: scale(1.1);
    z-index: 1000;
    transition: transform 0.3s ease-out;
}

.card[data-type="elemental"]:hover {
    box-shadow: 0 0 20px currentColor;
}

.card[data-type="mystic"]:hover {
    filter: brightness(1.2) contrast(1.1);
}

.card[data-type="chaos"]:hover {
    filter: hue-rotate(90deg);
    transform: scale(1.1) rotate(10deg);
}

/* Add new background animations */
@keyframes fireBackground {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

@keyframes iceSparkle {
    0% { background-position: -100% -100%; }
    100% { background-position: 200% 200%; }
}

@keyframes lightningFlash {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.7; }
    52% { opacity: 1; }
    54% { opacity: 0.7; }
    56% { opacity: 1; }
}

@keyframes natureGrow {
    0% { background-size: 100% 100%; }
    50% { background-size: 120% 120%; }
    100% { background-size: 100% 100%; }
}

/* Add these card-specific styles */
.card[data-title="Flame Burst"],
.card[data-title="Volcanic Might"] {
    background-size: 200% 200%;
    animation: fireFloat 3s infinite ease-in-out, fireBackground 3s infinite linear;
}
.card[data-title="Flame Burst"]::after,
.card[data-title="Volcanic Might"]::after {
    content: '';
    position: absolute;
    inset: 0;
    background: url('data:image/svg+xml,<svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><path d="M50,0 Q60,40 80,50 Q60,60 50,100 Q40,60 20,50 Q40,40 50,0" fill="rgba(255,100,0,0.2)"/></svg>');
    background-size: 100% 100%; /* Changed from 50% 50% */
    opacity: 0.7; /* Increased from 0.5 */
    mix-blend-mode: screen;
    animation: fireBackground 2s infinite linear;
    border-radius: 5px;
    z-index: 0;
}

.card[data-title="Frost Nova"] {
    background-size: 200% 200%;
    animation: iceFloat 4s infinite ease-in-out;
}
.card[data-title="Frost Nova"]::after {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(45deg, 
        transparent 45%, 
        rgba(255,255,255,0.7) 50%, /* Increased opacity */
        transparent 55%
    );
    background-size: 300% 300%; /* Increased from 200% */
    animation: iceSparkle 4s infinite linear;
    border-radius: 5px;
    z-index: 0;
}

.card[data-title="Lightning Strike"] {
    animation: lightningFloat 3s infinite ease-in-out, lightningFlash 5s infinite;
}
.card[data-title="Lightning Strike"]::after {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(45deg, 
        transparent 45%, 
        rgba(255,255,255,0.9) 48%, /* Increased opacity */
        rgba(255,255,255,0) 52%
    );
    animation: lightningFlash 5s infinite;
    border-radius: 5px;
    z-index: 0;
}

.card[data-title="Nature's Shield"],
.card[data-title="Tidal Wave"] {
    background-size: 100% 100%;
    animation: natureFloat 4s infinite ease-in-out, natureGrow 4s infinite ease-in-out;
}
.card[data-title="Nature's Shield"]::after {
    content: '';
    position: absolute;
    inset: 0;
    background: url('data:image/svg+xml,<svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><path d="M50,0 C60,40 90,50 50,100 C10,50 40,40 50,0" fill="rgba(100,255,100,0.3)"/></svg>');
    background-size: 100% 100%; /* Changed from 30% */
    opacity: 0.5; /* Increased from 0.3 */
    mix-blend-mode: screen;
    animation: natureGrow 4s infinite ease-in-out;
    border-radius: 5px;
    z-index: 0;
}

.card[data-title="Dark Matter"]::after {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at 50% 50%, 
        rgba(0,0,0,0) 0%,
        rgba(128,0,128,0.4) 50%, /* Increased opacity */
        rgba(0,0,0,0) 100%
    );
    animation: voidFloat 8s infinite linear;
    mix-blend-mode: screen;
    border-radius: 5px;
    z-index: 0;
}

.card[data-title="Time Warp"]::after {
    content: '';
    position: absolute;
    inset: 0;
    background: conic-gradient(
        transparent 0deg,
        rgba(255,255,255,0.4) 180deg, /* Increased opacity */
        transparent 360deg
    );
    animation: timeFloat 5s infinite linear;
    mix-blend-mode: screen;
    border-radius: 5px;
    z-index: 0;
}

/* Add a subtle glow effect to all cards */
.card::before {
    content: '';
    position: absolute;
    inset: -2px;
    background: inherit;
    filter: blur(4px);
    opacity: 0.5;
    z-index: -1;
    border-radius: inherit;
}

/* Make sure card content stays above the animations */
.card-icon,
.card-title,
.card-description {
    position: relative;
    z-index: 1;
}

/* Add styles for the ability confirmation dialog */
.ability-confirm {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(0, 0, 0, 0.9);
    border: 2px solid white;
    border-radius: 10px;
    padding: 20px;
    color: white;
    text-align: center;
    z-index: 2000;
    display: none;
    min-width: 300px;
}

.ability-confirm h2 {
    margin: 0 0 15px 0;
    font-size: 1.5em;
}

.ability-confirm p {
    margin: 0 0 20px 0;
    font-size: 1em;
}

.confirm-buttons {
    display: flex;
    justify-content: center;
    gap: 20px;
}

.confirm-buttons button {
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1em;
    transition: transform 0.2s, background-color 0.2s;
}

.confirm-buttons button:hover {
    transform: scale(1.1);
}

.confirm-yes {
    background-color: #4CAF50;
    color: white;
}

.confirm-no {
    background-color: #f44336;
    color: white;
}

.acquired-abilities {
    position: fixed;
    top: 20px;
    right: 20px;
    background: rgba(0, 0, 0, 0.8);
    border: 1px solid white;
    border-radius: 5px;
    padding: 10px;
    color: white;
    z-index: 1000;
}

.acquired-ability {
    display: flex;
    align-items: center;
    margin: 5px 0;
    font-size: 0.9em;
}

.acquired-ability .ability-icon {
    margin-right: 10px;
    font-size: 1.2em;
}

